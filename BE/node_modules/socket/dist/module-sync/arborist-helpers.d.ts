import {
  EditablePackageJson,
  fetchPackagePackument
} from '@socketsecurity/registry/lib/packages'
import { RangeStyle } from './semver.js'
import { Diff } from './shadow-npm-inject.js'
import { SafeNode } from './node.js'
type Packument = Exclude<
  Awaited<ReturnType<typeof fetchPackagePackument>>,
  null
>
declare function findBestPatchVersion(
  node: SafeNode,
  availableVersions: string[],
  vulnerableVersionRange?: string,
  _firstPatchedVersionIdentifier?: string | undefined
): string | null
declare function findPackageNode(
  tree: SafeNode,
  name: string,
  version?: string | undefined
): SafeNode | undefined
declare function findPackageNodes(
  tree: SafeNode,
  name: string,
  version?: string | undefined
): SafeNode[]
type DiffQueryIncludeFilter = {
  unchanged?: boolean | undefined
  unknownOrigin?: boolean | undefined
}
type DiffQueryOptions = {
  include?: DiffQueryIncludeFilter | undefined
}
type PackageDetail = {
  node: SafeNode
  existing?: SafeNode | undefined
}
declare function getDetailsFromDiff(
  diff_: Diff | null,
  options?: DiffQueryOptions | undefined
): PackageDetail[]
declare function isTopLevel(tree: SafeNode, node: SafeNode): boolean
declare function updateNode(
  node: SafeNode,
  packument: Packument,
  vulnerableVersionRange?: string,
  firstPatchedVersionIdentifier?: string | undefined
): boolean
declare function updatePackageJsonFromNode(
  editablePkgJson: EditablePackageJson,
  tree: SafeNode,
  node: SafeNode,
  targetVersion: string,
  rangeStyle?: RangeStyle | undefined
): boolean
export {
  Packument,
  findBestPatchVersion,
  findPackageNode,
  findPackageNodes,
  DiffQueryIncludeFilter,
  DiffQueryOptions,
  PackageDetail,
  getDetailsFromDiff,
  isTopLevel,
  updateNode,
  updatePackageJsonFromNode
}
